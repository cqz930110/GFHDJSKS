//
//  SupportAllMethodViewController.m
//  WeiPublicFund
//
//  Created by liuyong on 16/6/7.
//  Copyright © 2016年 www.niuduz.com. All rights reserved.
//

#import "SupportAllMethodViewController.h"
#import "GoSupportViewCell.h"
#import "SupportAllNumberTableViewCell.h"
#import "SupportAllTableViewCell.h"
#import "MMAlertView.h"
#import "PayUtil.h"
#import "NSString+Adding.h"
#import "User.h"
#import "JPUSHService.h"
#import "JDpayViewController.h"
#import "CheckNameViewController.h"
#import "SupportReturn.h"
#import "OptionAddressViewController.h"


typedef NS_ENUM(NSInteger,PayType){
    PayTypeBalance = 0,
    PayTypeJDPay = 3,
    PayTypeWeixin = 1
};

@interface SupportAllMethodViewController ()<UITableViewDataSource,UITableViewDelegate,JDpayViewControllerDelegate,SupportAllNumberTableViewCellDelegate>
@property (weak, nonatomic) IBOutlet UITableView *supportAllTableView;
@property (strong, nonatomic) IBOutlet UIView *tableHeaderView;
@property (strong, nonatomic) IBOutlet UIView *tableFooterView;
@property (weak, nonatomic) IBOutlet UILabel *supportAllAmountLab;
@property (weak, nonatomic) IBOutlet UIImageView *noReturnImageView;
@property (weak, nonatomic) IBOutlet UILabel *label1;
@property (weak, nonatomic) IBOutlet UILabel *label2;
@property (weak, nonatomic) IBOutlet UIButton *noReturnBtn;
@property (weak, nonatomic) IBOutlet UIView *view1;

@property (nonatomic,assign)PayType payType;
@property (nonatomic, assign) double balance;
@property (assign, nonatomic) BOOL installWeixin;

@property (nonatomic,retain)NSIndexPath *selectedIndexPath;

@property (nonatomic,strong)SupportReturn *support;
@property (copy, nonatomic) NSString *supportProjectId;

@property (nonatomic,strong)NSString *remark;
@property (nonatomic,strong)NSString *noReturnMoney;
@property (nonatomic,strong)NSString *supportCount;
@end
static NSString *cellIdentifier = @"GoSupportViewCell";
static NSString *const supportAll = @"SupportAllTableViewCell";
static NSString *const supportAllNumber = @"SupportAllNumberTableViewCell";
@implementation SupportAllMethodViewController


- (void)viewDidLoad {
    [super viewDidLoad];
    [self backBarItem];
    _balance = 0;
    _remark = @"";
    self.title = @"确认支持";
    [self setTableViewInfo];
    [self requestUserBalance];
    
    _payType = PayTypeBalance;
    _installWeixin = [WXApi isWXAppInstalled];
}

- (void)setTableViewInfo
{
    [_supportAllTableView registerNib:[UINib nibWithNibName:supportAll bundle:nil] forCellReuseIdentifier:supportAll];
    [_supportAllTableView registerNib:[UINib nibWithNibName:cellIdentifier bundle:nil] forCellReuseIdentifier:cellIdentifier];
    [_supportAllTableView registerNib:[UINib nibWithNibName:supportAllNumber bundle:nil] forCellReuseIdentifier:supportAllNumber];
    if (!_canReturn) {
        self.tableHeaderView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 44);
        _label1.hidden = YES;
        _label2.hidden = YES;
        _noReturnBtn.hidden = YES;
        _noReturnImageView.hidden = YES;
        _view1.hidden = YES;
    }
    
    _supportAllTableView.tableHeaderView = self.tableHeaderView;
    _supportAllTableView.tableFooterView = self.tableFooterView;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0) {
        return _supportArr.count + 1;
    }else{
        if (_installWeixin)
        {
            return 3;
        }
        return 2;
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        if (indexPath.row == _supportArr.count) {
            return 133;
        }
        return 82;
    }
    return 50;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0) {
        return 0.001;
    }
    return 15;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (section == 1) {
        return 15;
    }
    return 0.001;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        if (indexPath.row == _supportArr.count) {
            SupportAllNumberTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:supportAllNumber forIndexPath:indexPath];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            if (self.selectedIndexPath != 0) {
                SupportReturn *supportReturn = _supportArr[self.selectedIndexPath.row];
                cell.supportReturn = supportReturn;
                _supportAllAmountLab.text = [NSString stringWithFormat:@"¥%.2f",supportReturn.supportAmount];
                cell.showType = NO;
            }else{
                cell.showType = YES;
            }
            if (!_canReturn) {
                cell.showType = NO;
            }
            [cell.supportCommentTextField addTarget:self action:@selector(textFieldChange:) forControlEvents:UIControlEventEditingChanged];
            [cell.supportAmountTextField addTarget:self action:@selector(textFieldChange:) forControlEvents:UIControlEventEditingChanged];
            cell.delegate = self;
            return cell;
        }else{
            SupportAllTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:supportAll forIndexPath:indexPath];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            if (self.selectedIndexPath.row != indexPath.row) {
                cell.selectImageVIew.hidden = YES;
            }else{
                if (self.selectedIndexPath == 0) {
                    cell.selectImageVIew.hidden = YES;
                }else{
                    cell.selectImageVIew.hidden = NO;
                }
            }
            cell.support = _supportArr[indexPath.row];
            return cell;
        }
    }else{
        GoSupportViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier forIndexPath:indexPath];
        NSString *title;
        NSString *imageName;
        switch (indexPath.row)
        {
            case 0:
                title  = [NSString stringWithFormat:@"余额支付(%.2f)",_balance];
                imageName = @"余额_select";
                break;
            case 1:
                title  = _installWeixin?@"微信支付":@"京东支付";
                imageName = _installWeixin?@"select_winxin.png":@"seletcted_jd";
                break;
            case 2:
                title  = @"京东支付";
                imageName = @"seletcted_jd";
                break;
        }
        [cell iconImageName:imageName title:title];
        return  cell;
    }
    return nil;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 1)
    {
        switch (indexPath.row)
        {
            case 0:
                _payType = PayTypeBalance;
                break;
            case 1:
                _payType = _installWeixin?PayTypeWeixin:PayTypeJDPay;
                break;
            case 2:
                _payType = PayTypeJDPay;
                break;
                
        }
    }else if (indexPath.section == 0){
        if (indexPath.row != _supportArr.count) {
            self.selectedIndexPath = indexPath;//获取当前选择的行
            _noReturnImageView.hidden = YES;
            _support = _supportArr[indexPath.row];
            [_supportAllTableView reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationAutomatic];
            _supportAllAmountLab.text = @"";
            [_supportAllTableView selectRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:1] animated:NO scrollPosition:UITableViewScrollPositionNone];
        }
    }
}

- (void)textFieldChange:(UITextField *)textField
{
    if (textField.tag == 1000) {
        _remark = (textField.text.length == 0)?@"支持你，加油！":textField.text;
    }else{
        if ([textField.text integerValue] > 999999)
        {
            textField.text = @"999999";
        }
        _noReturnMoney = (textField.text.length == 0)?@"0":textField.text;
        _supportAllAmountLab.text = [NSString stringWithFormat:@"¥%@",textField.text];
    }
}

#pragma mark - SupportAllNumberTableViewCellDelegate
- (void)changeBtnClick:(SupportReturn *)supportReturn returnType:(NSInteger)type returnCell:(SupportAllNumberTableViewCell *)cell
{
    if (type == 0) { //  减
        if ([cell.numberLab.text integerValue] > 1) {
            cell.numberLab.text = [NSString stringWithFormat:@"%ld",[cell.numberLab.text integerValue] - 1];
            _supportCount = cell.numberLab.text;
            _supportAllAmountLab.text = [NSString stringWithFormat:@"¥ %.2f",supportReturn.supportAmount * [cell.numberLab.text integerValue]];
            NSMutableAttributedString * atriAmountText = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"支持金额：¥%.2f",supportReturn.supportAmount * [cell.numberLab.text integerValue]] attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:11],NSForegroundColorAttributeName:[UIColor redColor]}];
            [atriAmountText addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:15] range:NSMakeRange(0, 5)];
            [atriAmountText addAttribute:NSForegroundColorAttributeName value:[UIColor colorWithHexString:@"#181818"] range:NSMakeRange(0, 5)];
            [atriAmountText addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:15] range:NSMakeRange(6, atriAmountText.length - 9)];
            cell.supportAmountLab.attributedText = atriAmountText;
        }
    }else if (type == 1){//   加
        NSInteger numberCount = 0;
        if (_support.maxNumber == 0) {
            numberCount = 99;
        }else{
            numberCount = supportReturn.maxNumber - supportReturn.supportCount;
        }
        if ([cell.numberLab.text integerValue] < numberCount) {
            cell.numberLab.text = [NSString stringWithFormat:@"%ld",[cell.numberLab.text integerValue] + 1];
            _supportCount = cell.numberLab.text;
            _supportAllAmountLab.text = [NSString stringWithFormat:@"¥ %.2f",supportReturn.supportAmount * [cell.numberLab.text integerValue]];
            NSMutableAttributedString * atriAmountText = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"支持金额：¥%.2f",supportReturn.supportAmount * [cell.numberLab.text integerValue]] attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:11],NSForegroundColorAttributeName:[UIColor redColor]}];
            [atriAmountText addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:15] range:NSMakeRange(0, 5)];
            [atriAmountText addAttribute:NSForegroundColorAttributeName value:[UIColor colorWithHexString:@"#181818"] range:NSMakeRange(0, 5)];
            [atriAmountText addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:15] range:NSMakeRange(6, atriAmountText.length - 9)];
            cell.supportAmountLab.attributedText = atriAmountText;
        }
    }
}

#pragma mark - JDpayViewControllerDelegate
- (void)jdPayFinishedSupportId:(NSString *)supportId
{
    OptionAddressViewController *vc = [[OptionAddressViewController alloc] init];
    vc.supportId = _supportProjectId;
    [self.navigationController pushViewController:vc animated:YES];
}

//   单击选择无回报
- (IBAction)noReturnBtnClick:(id)sender {
    self.selectedIndexPath = nil;
    _noReturnImageView.hidden = NO;
    [_supportAllTableView reloadData];
    _supportAllAmountLab.text = @"";
}

//   选择收货地址
- (IBAction)selectAddressClick:(id)sender {
}

//   风险提醒
- (IBAction)riskClick:(id)sender {
    NSString *content = @"1.平台只提供平台网络空间、技术服务和支持等中介服务。陌筹君作为居间方，并不是发起人或支持者中的任何一方，众筹仅存在于发起人和支持者之间，使用平台产生的法律后果由发起人与支持者自行承担。\r\n\n2. 项目筹款成功后，发放回报及其后续服务、开具发票等事项均由发起人负责。如果发生发起人无法发放回报、不提供回报后续服务等情况，您需要直接和发起人协商解决，陌筹君对此不承担任何责任。\r\n\n3. 由于发起人能力和经验不足、市场风险、法律风险等各种因素，众筹可能失败。如果众筹失败，您支持的款项会全部退回到您的平台账户中。\r\n\n4. 支持纯抽奖档位和无私支持档位，一旦支付成功将不予退款，众筹失败的除外。\r\n\n5. 若您选择纯抽奖档位（未中奖）或无私支持档位，项目筹款成功后发起人将不会给您发送回报。";
    
    MMAlertViewConfig *config = [MMAlertViewConfig globalConfig];
    config.splitColor =  RGB(194, 139, 230);
    config.width = SCREEN_WIDTH - 40;
    config.detailFontSize = 12;
    config.innerMargin = 15;
    config.buttonHeight = 44;
    config.detailColor = Black737373;
    config.itemHighlightColor = [UIColor whiteColor];
    config.titleFontSize = 15;
    config.buttonFontSize = 14;
    
    MMAlertView *alertView = [[MMAlertView alloc]initWithTitle:@"风险提示" detail:content items:@[MMItemMake(@"确定", MMItemTypeHighlight, nil)]];
    alertView.attachedView = self.view;
    UILabel *detailLabel = [alertView valueForKey:@"detailLabel"];
    detailLabel.textAlignment = NSTextAlignmentLeft;
    UIView *buttonView = [alertView valueForKey:@"buttonView"];
    for (UIButton *subButton in buttonView.subviews)
    {
        [subButton setBackgroundImage:[UIImage mm_imageWithColor:RGB(194, 139, 230)] forState:UIControlStateNormal];
    }
    [alertView show];
}

#pragma mark - Request
- (void)requestUserBalance
{
    [MBProgressHUD showStatus:nil toView:self.view];
    [self.httpUtil requestDic4MethodName:@"Account/Center" parameters:nil result:^(NSDictionary *dic, int status, NSString *msg) {
        if (status == 1 || status == 2)
        {
            [MBProgressHUD dismissHUDForView:self.view];
            _balance = [[dic valueForKey:@"Balance"] doubleValue];
            [_supportAllTableView reloadSections:[NSIndexSet indexSetWithIndex:1] withRowAnimation:UITableViewRowAnimationAutomatic];
            
            _payType = PayTypeBalance;
            [_supportAllTableView selectRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:1] animated:NO scrollPosition:UITableViewScrollPositionNone];
        }
        else
        {
            //#warning TODO - 操作失败 直接退出控制器
            [MBProgressHUD dismissHUDForView:self.view withError:msg];
//            [self.navigationController performSelector:@selector(popViewControllerAnimated:) withObject:[NSNumber numberWithBool:YES] afterDelay:2.5];
        }
    }];
}

//   去支付
- (IBAction)goPayClick:(id)sender {
    
    if (self.selectedIndexPath != 0)//   有回报
    {
        [self payHaveRetun];
    }else{   //  无回报
        [self payNoReturn];
    }
}

//   有回报
- (void)payHaveRetun
{
    double balance = _support.supportAmount;
    // 如果是余额 需要判断余额是否够用
    if (_payType == PayTypeBalance)
    {
        if (_balance < balance)
        {
            [MBProgressHUD showError:@"余额不够啦，换个方式支持，或者充值也可以" toView:self.view];
            return;
        }
    }
    if (_payType == PayTypeJDPay)
    {
        [MBProgressHUD showStatus:nil toView:self.view];
        [self.httpUtil requestDic4MethodName:@"Personal/CheckIDAuth" parameters:@{} result:^(NSDictionary *dic, int status, NSString *msg) {
            
            if (status == 1 || status == 2)
            {
                [MBProgressHUD dismissHUDForView:self.view];
                if ([[dic valueForKey:@"IsValidated"] integerValue] == 1)
                {
                    // 获取到URL
                    JDpayViewController *vc= [[JDpayViewController alloc] init];
                    vc.delegate = self;
                    vc.parmas =  @{@"PayType":@(_payType),@"RepayId":@(_support.Id),@"Amount":@"",@"CrowdFundId":@(_support.crowdFundId),@"Remark":[NSString encodeString:_remark]};
                    [self.navigationController pushViewController:vc animated:YES];
                }
                else
                {
                    // 没有实名认证
                    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"您还没有实名认证,是否去实名认证？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
                    alert.tag = 20000;
                    [alert show];
                }
            }
            else
            {
                [MBProgressHUD dismissHUDForView:self.view withError:msg];
                return ;
            }
        }];
        return;
    }
    
    [MBProgressHUD showStatus:nil toView:self.view];
    [self.httpUtil requestDic4MethodName:@"Support/Add" parameters:@{@"PayType":@(_payType),@"RepayId":@(_support.Id),@"Amount":@"",@"CrowdFundId":@(_support.crowdFundId),@"Remark":[NSString encodeString:_remark],@"Count":_supportCount} result:^(NSDictionary *dic, int status, NSString *msg){
        if (status == 1 || status == 2)
        {
            _supportProjectId = [dic valueForKey:@"SupportProjectId"];
            // 如果是余额
            if (_payType == PayTypeBalance)
            {
                [MBProgressHUD dismissHUDForView:self.view withSuccess:msg];
                
                // 设置 推送别名
                User *userInfo = [User shareUser];
                NSString *tagStr = [NSString stringWithFormat:@"mochoujun_%@",@(_support.crowdFundId)];// mochoujun_项目ID
                [JPUSHService setTags:[NSSet setWithObject:tagStr] aliasInbackground:userInfo.userName];
                [[NSNotificationCenter defaultCenter] postNotificationName:@"UpdateDetailDataSource" object:nil];
                //跳转到地址页面
                                OptionAddressViewController *vc = [[OptionAddressViewController alloc] init];
                                vc.supportId = _supportProjectId;
                                [self.navigationController pushViewController:vc animated:YES];
                
            }
            else
            {
                [self otherPayWithPayType:_payType pamar:dic];
            }
        }
        else
        {
            [MBProgressHUD dismissHUDForView:self.view withError:msg];
        }
    }];
}

//  无回报
- (void)payNoReturn
{
    [self.view endEditing:YES];
    if (IsStrEmpty(_noReturnMoney)) {
        [MBProgressHUD showMessag:@"你想支持多少，要实打实的写上哦" toView:self.view];
        return;
    }
    
    if ([_noReturnMoney doubleValue] < 0.09) {
        [MBProgressHUD showMessag:@"支持金额须大于0.1元！" toView:self.view];
        return;
    }
    
    if ([_noReturnMoney integerValue] > 999999) {
        [MBProgressHUD showMessag:@"超过最大支持金额！" toView:self.view];
        return;
    }
    
    if (_payType == PayTypeBalance)
    {
        if (_balance < [_noReturnMoney doubleValue]) {
            [MBProgressHUD showMessag:@"余额不够啦，换个方式支持，或者充值也可以" toView:self.view];
            return;
        }
    }
    
    if (_payType == PayTypeJDPay)
    {
        [self JDPay];
    }
    else
    {
        [self requestSupportProject];
    }
}

- (void)requestSupportProject
{
    [MBProgressHUD showStatus:nil toView:self.view];
    [self.httpUtil requestDic4MethodName:@"Support/Add" parameters:@{@"PayType":@(_payType),@"RepayId":@(_support.Id),@"Amount":_noReturnMoney,@"CrowdFundId":@(_support.crowdFundId),@"Remark":[NSString encodeString:_remark],@"Count":@"1"} result:^(NSDictionary *dic, int status, NSString *msg){
        if (status == 1 || status == 2)
        {
            _supportProjectId = [dic valueForKey:@"SupportProjectId"];
            // 如果是余额
            if (_payType == PayTypeBalance)
            {
                [MBProgressHUD dismissHUDForView:self.view withSuccess:msg];
                
                // 设置 推送别名
                User *userInfo = [User shareUser];
                NSString *tagStr = [NSString stringWithFormat:@"mochoujun_%@",@(_support.crowdFundId)];// mochoujun_项目ID
                [JPUSHService setTags:[NSSet setWithObject:tagStr] aliasInbackground:userInfo.userName];
                [[NSNotificationCenter defaultCenter] postNotificationName:@"UpdateDetailDataSource" object:nil];
                //跳转到地址页面
                OptionAddressViewController *vc = [[OptionAddressViewController alloc] init];
                vc.supportId = _supportProjectId;
                [self.navigationController pushViewController:vc animated:YES];
                
            }
            else
            {
                [self otherPayWithPayType:_payType pamar:dic];
            }
        }
        else
        {
            [MBProgressHUD dismissHUDForView:self.view withError:msg];
        }
    }];
}

- (void)JDPay{
    if (_payType == PayTypeJDPay)
    {
        [MBProgressHUD showStatus:nil toView:self.view];
        [self.httpUtil requestDic4MethodName:@"Personal/CheckIDAuth" parameters:@{} result:^(NSDictionary *dic, int status, NSString *msg) {
            
            if (status == 1 || status == 2)
            {
                [MBProgressHUD dismissHUDForView:self.view];
                if ([[dic valueForKey:@"IsValidated"] integerValue] == 1)
                {
                    // 获取到URL
                    JDpayViewController *vc= [[JDpayViewController alloc] init];
                    vc.delegate = self;
                    vc.parmas =  @{@"PayType":@(_payType),@"RepayId":@(_support.Id),@"Amount":@"",@"CrowdFundId":@(_support.crowdFundId),@"Remark":[NSString encodeString:_remark],@"Count":@"1"};
                    [self.navigationController pushViewController:vc animated:YES];
                }
                else
                {
                    // 没有实名认证
                    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:nil message:@"您还没有实名认证,是否去实名认证？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
                    alert.tag = 20000;
                    [alert show];
                }
            }
            else
            {
                [MBProgressHUD dismissHUDForView:self.view withError:msg];
                return ;
            }
        }];
    }
}


- (void)otherPayWithPayType:(NSInteger)payType pamar:(NSDictionary *)pamar
{
    [MBProgressHUD dismissHUDForView:self.view];
    BankPayType otherPayType = -1;
    //  0余额 1微信 2支付宝
    switch (payType) {
        case 1:
            otherPayType = BankPayTypeWeixinPay;
            break;
        default:
            return;
    }
    
    if (otherPayType != BankPayTypeWeixinPay && otherPayType != BankPayTypeAliPay)
    {
        [MBProgressHUD showMessag:@"请选择支持方式" toView:self.view];
        return;
    }
    [[PayUtil payUtil] payWithType:otherPayType viewController:self param:pamar completion:^(BOOL isSuccess) {
        //支付结果
        if (isSuccess)
        {
            [MBProgressHUD showSuccess:@"支持成功，感激涕零" toView:self.view];
            //            [self.navigationController performSelector:@selector(popViewControllerAnimated:) withObject:[NSNumber numberWithBool:YES] afterDelay:1.0];
            // 设置 推送别名
            User *userInfo = [User shareUser];
            NSString *tagStr = [NSString stringWithFormat:@"mochoujun_%@",@(_support.crowdFundId)];// mochoujun_项目ID
            [JPUSHService setTags:[NSSet setWithObject:tagStr] aliasInbackground:userInfo.userName];
            [[NSNotificationCenter defaultCenter] postNotificationName:@"UpdateDetailDataSource" object:nil];
            OptionAddressViewController *vc = [[OptionAddressViewController alloc] init];
            vc.supportId = _supportProjectId;
            [self.navigationController pushViewController:vc animated:YES];
        }
        else
        {
            [MBProgressHUD showError:@"支付没成功哦，求继续支持" toView:self.view];
        }
    }];
}

#pragma mark - UIAlertViewDelegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (alertView.tag == 20000){
        if (buttonIndex == 1) {
            CheckNameViewController *checkNameVC = [[CheckNameViewController alloc] init];
            [self.navigationController pushViewController:checkNameVC animated:YES];
        }
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
